page = params[:page] || 1
offset = (page.to_i - 1) * 20 + 1
jobs_collection = jobs.per_page_kaminari(25).offset(offset).limit(20)

paginated_collection(jobs_collection) do
  table_for collection, sortable: true do
    column('Job ID', sortable: 'jobs.id') { |job| link_to job.id, admin_job_path(job)}
    column('Failed On', sortable: 'jobs.current_step_at') { |job| "#{time_ago_in_words(job.current_step_at)} ago"  }
    column ('Enlisted Projects') do |job|
      if job.repository && job.repository.projects
        job.repository.projects.collect do |project|
          "#{link_to project.name, project_path(project)} [#{link_to 'Jobs', admin_project_jobs_path(project)}]"
        end.join(', ').html_safe
      elsif job.project
        link_to job.project.name, project_path(job.project)
      end
    end
    column(:exception) { |job| job.exception.truncate(250) }
    column('Repository', sortable: 'repositories.url') do |job|
      link_to job.repository.nice_url, admin_repository_path(job.repository) if job.repository
    end
    column(:slave, sortable: 'slaves.hostname') do |job|
      link_to job.slave.hostname, admin_slafe_path(job.slave) if job.slave
    end
  end
end
