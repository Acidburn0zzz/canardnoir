--
-- This script deletes the spammers from the accounts table using the
-- "selected_clean_sorted.csv" file generated by the ml_research/project work
--
-- The behavior of this script is as follows:
-- 1) Start transaction
-- 2) Drop the constraints (to improve the speed of account deletion)
-- 3) For each constraint, delete account_records from the constrained table
-- 4) Delete the records from the accounts table where the account.id is in the pdp_spammer_ids table (already created)
-- 5) Restore the constraints
-- 6) Complete the transation
-- 
-- If the "pdp_spammer_ids" table needs to be created, these are the steps:
-- CREATE TABLE IF NOT EXISTS pdp_spammer_ids (account_id integer);
-- CREATE UNIQUE INDEX IF NOT EXISTS pdp_spammer_ids_pkey on pdp_spammer_ids (account_id);
-- COPY pdp_spammer_ids (account_id) from '/tmp/selected_clean_sorted.csv'
--
-- Note: the "selected_clean_sorted.csv" file needs to be in the "/tmp" directory of the DATABASE server 
-- And, it's already on the prd-oh-db01.dc2.lan and the oh-db01.dc1.lan servers (as well as attached to the ticket OTWO-4889)
--
-- Referenced by (from ohloh_production)
--    TABLE "account_reports" CONSTRAINT "account_reports_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "actions" CONSTRAINT "actions_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "api_keys" CONSTRAINT "api_keys_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "authorizations" CONSTRAINT "authorizations_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "positions" CONSTRAINT "claims_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "duplicates" CONSTRAINT "duplicates_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "edits" CONSTRAINT "edits_account_id_fkey1" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "edits" CONSTRAINT "edits_undone_by_fkey1" FOREIGN KEY (undone_by) REFERENCES accounts(id)
--    TABLE "event_subscription" CONSTRAINT "event_subscription_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "event_subscription" CONSTRAINT "event_subscription_subscriber_id_fkey" FOREIGN KEY (subscriber_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "follows" CONSTRAINT "follows_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "follows" CONSTRAINT "follows_owner_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "helpfuls" CONSTRAINT "helpfuls_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "invites" CONSTRAINT "invites_invitee_id_fkey" FOREIGN KEY (invitee_id) REFERENCES accounts(id)
--    TABLE "invites" CONSTRAINT "invites_invitor_id_fkey" FOREIGN KEY (invitor_id) REFERENCES accounts(id)
--    TABLE "jobs" CONSTRAINT "jobs_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "kudos" CONSTRAINT "kudos_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "kudos" CONSTRAINT "kudos_sender_id_fkey" FOREIGN KEY (sender_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "manages" CONSTRAINT "manages_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "manages" CONSTRAINT "manages_approved_by_fkey" FOREIGN KEY (approved_by) REFERENCES accounts(id)
--    TABLE "manages" CONSTRAINT "manages_deleted_by_fkey" FOREIGN KEY (deleted_by) REFERENCES accounts(id)
--    TABLE "message_account_tags" CONSTRAINT "message_account_tags_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "messages" CONSTRAINT "messages_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "people" CONSTRAINT "people_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "posts" CONSTRAINT "posts_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "ratings" CONSTRAINT "ratings_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "recommendations" CONSTRAINT "recommendations_invitee_id_fkey" FOREIGN KEY (invitee_id) REFERENCES accounts(id)
--    TABLE "recommendations" CONSTRAINT "recommendations_invitor_id_fkey" FOREIGN KEY (invitor_id) REFERENCES accounts(id)
--    TABLE "reviews" CONSTRAINT "reviews_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "stacks" CONSTRAINT "stacks_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "topics" CONSTRAINT "topics_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "topics" CONSTRAINT "topics_replied_by_fkey" FOREIGN KEY (replied_by) REFERENCES accounts(id) ON DELETE CASCADE
--    TABLE "vitae" CONSTRAINT "vitae_account_id_fkey" FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADEj 
--
--    We're also going to drop a constraint on the people table from the actions table, and the accounts.accounts_best_vita_id_fkey

-- Step 1
-- Start Transaction
-- 
BEGIN;

-- Step 2
--  Remove the foreign key constraints from the tables account_reports, edits, posts, kudos, etc.
--
ALTER TABLE account_reports DROP CONSTRAINT account_reports_account_id_fkey;
ALTER TABLE actions DROP CONSTRAINT actions_account_id_fkey;
ALTER TABLE api_keys DROP CONSTRAINT api_keys_account_id_fkey;
ALTER TABLE authorizations DROP CONSTRAINT authorizations_account_id_fkey;
ALTER TABLE positions DROP CONSTRAINT claims_account_id_fkey;
ALTER TABLE duplicates DROP CONSTRAINT duplicates_account_id_fkey;
ALTER TABLE edits DROP CONSTRAINT edits_account_id_fkey1;
ALTER TABLE edits DROP CONSTRAINT edits_undone_by_fkey1;
ALTER TABLE event_subscription DROP CONSTRAINT event_subscription_account_id_fkey;
ALTER TABLE event_subscription DROP CONSTRAINT event_subscription_subscriber_id_fkey;
ALTER TABLE follows DROP CONSTRAINT follows_account_id_fkey;
ALTER TABLE follows DROP CONSTRAINT follows_owner_id_fkey;
ALTER TABLE helpfuls DROP CONSTRAINT helpfuls_account_id_fkey;
ALTER TABLE invites DROP CONSTRAINT invites_invitee_id_fkey;
ALTER TABLE invites DROP CONSTRAINT invites_invitor_id_fkey;
ALTER TABLE jobs DROP CONSTRAINT jobs_account_id_fkey;
ALTER TABLE kudos DROP CONSTRAINT kudos_account_id_fkey;
ALTER TABLE kudos DROP CONSTRAINT kudos_sender_id_fkey;
ALTER TABLE manages DROP CONSTRAINT manages_account_id_fkey;
ALTER TABLE manages DROP CONSTRAINT manages_approved_by_fkey;
ALTER TABLE manages DROP CONSTRAINT manages_deleted_by_fkey;
ALTER TABLE message_account_tags DROP CONSTRAINT message_account_tags_account_id_fkey;
ALTER TABLE messages DROP CONSTRAINT messages_account_id_fkey;
ALTER TABLE people DROP CONSTRAINT people_account_id_fkey;
ALTER TABLE posts DROP CONSTRAINT posts_account_id_fkey;
ALTER TABLE ratings DROP CONSTRAINT ratings_account_id_fkey;
ALTER TABLE recommendations DROP CONSTRAINT recommendations_invitee_id_fkey;
ALTER TABLE recommendations DROP CONSTRAINT recommendations_invitor_id_fkey;
ALTER TABLE reviews DROP CONSTRAINT reviews_account_id_fkey;
ALTER TABLE stacks DROP CONSTRAINT stacks_account_id_fkey;
ALTER TABLE topics DROP CONSTRAINT topics_account_id_fkey;
ALTER TABLE topics DROP CONSTRAINT topics_replied_by_fkey;
ALTER TABLE vitae DROP CONSTRAINT vitae_account_id_fkey;
ALTER TABLE actions DROP CONSTRAINT actions_claim_person_id_fkey; -- has constraint to people table
ALTER TABLE accounts DROP CONSTRAINT accounts_about_markup_id_fkey;

-- Step 3
-- For each constraint table, delete all records that are in the pdp_spammers_ids table
--
UPDATE accounts SET best_vita_id = NULL WHERE id IN (select account_id FROM pdp_spammer_ids);
DELETE FROM markups WHERE id IN (SELECT about_markup_id FROM accounts where id IN (SELECT account_id FROM pdp_spammer_ids));
DELETE FROM account_reports WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM actions WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM api_keys WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM authorizations WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM positions WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM duplicates WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM edits WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM edits WHERE undone_by IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM event_subscription WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM event_subscription WHERE subscriber_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM follows WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM follows WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM helpfuls WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM invites WHERE invitee_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM invites WHERE invitor_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM jobs WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM kudos WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM kudos WHERE sender_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM manages WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM manages WHERE approved_by IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM manages WHERE deleted_by IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM message_account_tags WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM messages WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM people WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM posts WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM ratings WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM recommendations WHERE invitee_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM recommendations WHERE invitor_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM reviews WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM stacks WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM topics WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM topics WHERE replied_by IN (SELECT account_id FROM pdp_spammer_ids);
DELETE FROM vitae WHERE account_id IN (SELECT account_id FROM pdp_spammer_ids);

-- Step 4
-- Delete records from accounts table
-- 
DELETE FROM accounts WHERE id IN (SELECT account_id FROM pdp_spammer_ids);

-- Step 5
-- Restore Constraints
--
ALTER TABLE account_reports ADD CONSTRAINT account_reports_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE actions ADD CONSTRAINT actions_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE api_keys ADD CONSTRAINT api_keys_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE authorizations ADD CONSTRAINT authorizations_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE positions ADD CONSTRAINT claims_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE duplicates ADD CONSTRAINT duplicates_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE edits ADD CONSTRAINT edits_account_id_fkey1 FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE edits ADD CONSTRAINT edits_undone_by_fkey1 FOREIGN KEY (undone_by) REFERENCES accounts(id);
ALTER TABLE event_subscription ADD CONSTRAINT event_subscription_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE event_subscription ADD CONSTRAINT event_subscription_subscriber_id_fkey FOREIGN KEY (subscriber_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE follows ADD CONSTRAINT follows_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE follows ADD CONSTRAINT follows_owner_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE helpfuls ADD CONSTRAINT helpfuls_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE invites ADD CONSTRAINT invites_invitee_id_fkey FOREIGN KEY (invitee_id) REFERENCES accounts(id);
ALTER TABLE invites ADD CONSTRAINT invites_invitor_id_fkey FOREIGN KEY (invitor_id) REFERENCES accounts(id);
ALTER TABLE jobs ADD CONSTRAINT jobs_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE kudos ADD CONSTRAINT kudos_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE kudos ADD CONSTRAINT kudos_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE manages ADD CONSTRAINT manages_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE manages ADD CONSTRAINT manages_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES accounts(id);
ALTER TABLE manages ADD CONSTRAINT manages_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES accounts(id);
ALTER TABLE message_account_tags ADD CONSTRAINT message_account_tags_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE messages ADD CONSTRAINT messages_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE people ADD CONSTRAINT people_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE posts ADD CONSTRAINT posts_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE ratings ADD CONSTRAINT ratings_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE recommendations ADD CONSTRAINT recommendations_invitee_id_fkey FOREIGN KEY (invitee_id) REFERENCES accounts(id);
ALTER TABLE recommendations ADD CONSTRAINT recommendations_invitor_id_fkey FOREIGN KEY (invitor_id) REFERENCES accounts(id);
ALTER TABLE reviews ADD CONSTRAINT reviews_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE stacks ADD CONSTRAINT stacks_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE topics ADD CONSTRAINT topics_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE topics ADD CONSTRAINT topics_replied_by_fkey FOREIGN KEY (replied_by) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE vitae ADD CONSTRAINT vitae_account_id_fkey FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE;
ALTER TABLE actions ADD CONSTRAINT actions_claim_person_id_fkey FOREIGN KEY (claim_person_id) REFERENCES people(id);
ALTER TABLE accounts ADD CONSTRAINT accounts_about_markup_id_fkey FOREIGN KEY (about_markup_id) REFERENCES markups(id) ON DELETE CASCADE;

-- Step 6
-- Commit
-- 
COMMIT;

