user ohloh;
worker_processes  2;

error_log         /var/log/nginx/error.log;
pid               /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    #rewrite_log  on; #uncomment this to debug rewrite rules
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;

    ## limits
    # limit how big people can upload files
    client_max_body_size 10m;

    keepalive_timeout  65;
    tcp_nodelay       off;

    upstream mongrel {
        server localhost:7506;
    }

    log_format  normal '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" "$uid_set" "$uid_got"';

    access_log /var/log/nginx/nginx.log normal;

    ## Compression
    #gzip              on;
    #gzip_buffers      16 8k;
    #gzip_comp_level   9;
    #gzip_http_version 1.0;
    #gzip_min_length   0;
    #gzip_types        text/plain text/html text/css image/x-icon image/png application/x-javascript;
    #gzip_vary         on;

    server {
        listen       50001;
        root /var/local/ohloh/public;

        userid          on;
        userid_name     uid;
        userid_path     /;
        userid_expires  365d;

        #if ($host != "www2.ohloh.net") {
        #    rewrite ^(.*)$ http://www2.ohloh.net$1 permanent;
        #    break;
        #}

        # this rewrites all the requests to the maintenance.html
        # page if it exists in the doc root. This is for capistrano's
        # disable web task
        #if ( -f /ohloh_beta/shared/system/maintenance.html ) {
            #rewrite  ^(.*)$  /maintenance.html last;
            #break;
        #}

        #location ~* maintenance.html {
            #root /ohloh_beta/shared/system;
        #}

        include /var/local/ohloh/config/nginx/block_malicious.inc;
        include /var/local/ohloh/config/nginx/rewrite_projects.inc;

        # Look for badges first in memcached
        location ~* (badge\.gif|account_tiny\.gif|account_detailed\.gif|account_rank\.gif|stack_normal\.html|languages\.png|.*\/widgets\/.*)$ {
            access_log /var/log/nginx/badge_nginx.log normal;
            access_log /var/log/nginx/nginx.log normal;
            add_header Cache-Control public;
            default_type  text/javascript;
            charset utf-8;
            set $memcached_key ohloh-production:$scheme/views/$uri; # bug: %20 becomes %2520
            memcached_pass localhost:15130;

            # Send to app. server if Memcached could not answer the request
            error_page 404 = @dynamic_request;
        }

        location ~* (robots\.txt|commits.*\.png|age_spark\.png|stack_normal\.html|languages\.png)$ {
            include /var/local/ohloh/config/nginx/mongrel_proxy.inc;
            proxy_set_header Cache-Control public;
            expires 1h;
            proxy_set_header X-FORWARDED_PROTO $scheme;
        }


        location ~* \.(html|jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|mov)$ {
            expires 12h;
            root /var/local/ohloh/public;
        }

        location ~* ^/p/.*/download$ {
            access_log /var/log/ohloh/download.log;
            include /var/local/ohloh/config/nginx/mongrel_proxy.inc;
            proxy_set_header X-FORWARDED_PROTO $scheme;
        }

        location / {
            rewrite "^(.+);badge_js$" "$1/badge_js" permanent;
            rewrite "^(.+);project_(.+)$" "$1/project_$2" permanent;
            rewrite "^(.*)/languages;compare(.*)$" "$1languages/compare$2" permanent;
            rewrite "^(.*stacks.*)/rss_articles(.*)$" "$1" permanent;

            #include rewrite_projects.inc;
            include /var/local/ohloh/config/nginx/mongrel_proxy.inc;
            proxy_set_header X-FORWARDED_PROTO $scheme;
        }

        location @dynamic_request {
          access_log /var/log/nginx/nginx.log normal;
          access_log /var/log/nginx/badge_mongrel.log normal;
          internal;
          add_header Cache-Control public;
          include /var/local/ohloh/config/nginx/mongrel_proxy.inc;
          proxy_set_header X-FORWARDED_PROTO $scheme;
        }
    }
}
